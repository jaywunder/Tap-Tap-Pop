{"version":3,"sources":["../js/num.js"],"names":[],"mappings":"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","file":"num.js","sourcesContent":["//jshint -W117\n//jshint -W097\n'use strict';\n\nfunction sigmoid(x) {\n  return 1 / (1 + Math.pow(Math.E, -x))\n}\n\nfunction sigmoid_output_to_derivative(output) {\n  return output * (1 - output)\n}\n\nclass Matrix {\n  constructor(rows, cols) {\n\n    if (typeof rows === 'number' && cols !== undefined) {\n      this.rows = rows\n      this.cols = cols\n\n      this.matrix = []\n      for (let i = 0; i < rows; i++)\n        this.matrix.push(new Array(rows))\n\n    } else if (Array.isArray(rows)) {\n      let matrix = rows\n      this.rows = matrix.length\n      this.cols = matrix[0].length\n\n      this.matrix = matrix\n    }\n    return this\n  }\n\n  map(func) {\n    return this.matrix.map(func, this)\n  }\n\n  mapAll(func) {\n    return new Matrix(this.map((y, i) => {\n      return y.map((x, j) => {return func(x, i, j)}, this)\n    }, this))\n  }\n\n  toRandom() {\n    this.writeAll((x) => Math.random())\n    return this\n  }\n\n  toZeros() {\n    // jshint -W053\n    // here I use \"new Number\" because 0 is type inferenced into undefined\n    this.writeAll((x) => { return new Number(0) })\n    return this\n  }\n\n  toValue(val) {\n    // jshint -W053\n    // here I use \"new Number\" because 0 is type inferenced into undefined\n    this.writeAll((x) => { return new Number(val) })\n    return this\n  }\n\n  toString() {\n    let str = ''\n\n    str = str + this.map((x) => {\n      return '[' + x.toString() + ']'\n    })\n\n    return str\n  }\n\n  writeAll(func) {\n    for (let y = 0; y < this.matrix.length; y++) {\n      for (let x = 0; x < this.matrix[y].length; x++) {\n        this.matrix[y][x] = func(this.matrix[y][x], y, x) || this.matrix[y][x]\n      }\n    }\n\n    return this\n  }\n\n  mul(other) {\n    if (typeof other == 'number')\n      return this.mapAll((value, i, j) => { return value * other })\n\n    else if (other instanceof Matrix) {\n      if (this.rows === other.cols) {\n        let final = new Matrix(this.rows, other.cols)\n\n        for (let row = 0; row < this.rows; row++) {\n          for (let col = 0; col < other.cols; col++) {\n            let rowTotal = 0;\n            this.matrix[row].map((x, i) => {\n              rowTotal += x * other.matrix[i][col]\n            })\n\n            final.matrix[row][col] = rowTotal\n          }\n        }\n        return final\n      } else {\n        new Error('Size Error: Rows of A don\\'t match the Columns of B')\n      }\n    }\n  }\n\n  add(other) {\n    if (typeof other == 'number')\n      return this.mapAll((value, y, x) => { return value + other })\n\n    else if (other instanceof Matrix) {\n      if (other.cols === this.cols && other.rows === this.rows) {\n        return this.mapAll((value, y, x) => {\n          return value + other.matrix[y][x]\n        })\n      } else {\n        new Error('Size Error: Matrices aren\\'t the same size')\n      }\n    }\n  }\n\n  sub(other) {\n    if (typeof other == 'number')\n      return this.mapAll((value, y, x) => { return value - other })\n\n    else if (other instanceof Matrix) {\n      if (other.cols === this.cols && other.rows === this.rows) {\n        return this.mapAll((value, y, x) => {\n          return value - other.matrix[y][x]\n        })\n      } else {\n        new Error('Size Error: Matrices aren\\'t the same size')\n      }\n    }\n  }\n\n  div(other) {\n    if (typeof other == 'number')\n      return this.mapAll((value, y, x) => { return x / other })\n  }\n\n  inv() { // TODO: Inverse method\n    if (this.rows === this.cols) {\n\n    }\n  }\n}\n\nlet ctx = typeof window === 'undefined' ? self : window\nctx.num = {}\nnum.sigmoid = sigmoid\nnum.sigmoid_output_to_derivative = sigmoid_output_to_derivative\nnum.Matrix = Matrix\n"]}